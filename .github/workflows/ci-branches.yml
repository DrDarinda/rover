name: ci-branches

on:
  push:
    branches-ignore:
      - master

env:
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_VAR_azure_devops_pat_token: ${{ secrets.TF_VAR_azure_devops_pat_token }}
  TF_VAR_azure_devops_url_organization: ${{ secrets.TF_VAR_azure_devops_url_organization }}


jobs:
  build:

    name: Build roverdev
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Docker Hub Login
      uses: Azure/docker-login@v1
      with:
        # Container registry username
        username: aztfmod 
        # Container registry password
        password: ${{ secrets.docker_registry_password }}
        # Container registry server url
        login-server: https://index.docker.io/v1/
    - name: Build the rover
      run: |        
        set -e
        docker_tag=$(date +"%g%m.%d%H%M")
        echo ::set-env name=docker_tag::${docker_tag}

        docker-compose build
        docker tag rover_rover aztfmod/roverdev:$docker_tag
        docker push aztfmod/roverdev:$docker_tag
  
  # e2e:
  #   name: integration tests
  #   runs-on: ubuntu-latest
  #   needs: build

  #   container:
  #     image: aztfmod/roverdev:${{ env.docker_tag }}
  #     options: --user 0

  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       region: ["westus2"]
  #       argument: ["", "workspace list", ""]
  
        
  #   steps:
      
  #     - uses: actions/checkout@v2

  #     - name: Login azure
  #       run: |
  #         az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' --tenant '${{ env.ARM_TENANT_ID }}'
  #         az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

  #         echo "local user: $(whoami)"
      
  #     - name: Locate launchpad
  #       run: |
  #         id=$(az storage account list --query "[?tags.tfstate=='level0']" -o json | jq -r .[0].id)
  #         if [ "${id}" == "null" ]; then
  #           /tf/rover/launchpad.sh /tf/launchpads/launchpad_opensource plan -var location=${{ matrix.region }}
  #           /tf/rover/launchpad.sh /tf/launchpads/launchpad_opensource apply -var location=${{ matrix.region }}
  #         fi

  #     - name:  setup context
  #       run: |
  #         ln -s /__w/rover/rover /tf/caf
  #         echo "ls /tf/caf" && ls -lsa /tf/caf
  #         ls -lsa /tmp

  #     - name: Login azure
  #       run: |
  #         az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' --tenant '${{ env.ARM_TENANT_ID }}'
  #         az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

  #         echo "local user: $(whoami)"
      
  #     - name: Test rover command with '${{ matrix.argument }}''
  #       run: |
  #         /tf/rover/rover.tf 